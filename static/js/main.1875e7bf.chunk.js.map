{"version":3,"sources":["components/feedback-widget/Statistics.module.css","components/feedback-widget/Section.module.css","components/feedback-widget/FeedbackOptions.module.css","components/feedback-widget/Notification.module.css","components/feedback-widget/Section .js","components/feedback-widget/FeedbackOptions.js","components/feedback-widget/Notification.js","components/feedback-widget/Statistics .js","App.js","index.js"],"names":["module","exports","Section","children","title","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","index","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","statistics","stats","positive","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedback","prevState","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,MAAQ,0BAA0B,SAAW,uD,mBCA7ID,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,mC,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,qICgBbC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC3B,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,6BAAKH,IACJD,M,gBCmBQK,MAvBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKL,UAAWC,IAAEG,QAAlB,SACGA,EAAQE,KAAI,SAACC,EAAQC,GACpB,OACE,wBAAoBC,QAAS,kBAAMJ,EAAgBG,IAAnD,SACGD,GADUC,S,gBCGRE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGX,UAAWC,IAAEU,QAAhB,SAA0BA,K,gBC+BpBC,MA/Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,sBAAKjB,UAAWC,IAAEiB,WAAlB,UACE,4CACCF,EAAQ,EACP,gCACE,qBAAIhB,UAAWC,IAAEkB,MAAjB,UACE,wCAAWN,KACX,2CAAcC,KACd,uCAAUC,QAEZ,oBAAGf,UAAWC,IAAEe,MAAhB,8BAAyCA,KACzC,oBAAGhB,UAAWC,IAAEmB,SAAhB,iCACuBH,EADvB,UAKF,cAAC,EAAD,CAAcN,QAAQ,0BChBf,SAASU,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAcMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAO1B,OACE,eAAC,EAAD,CAAShB,MAAM,0BAAf,UACE,cAAC,EAAD,CACEK,QAAS,CAACS,EAAMC,EAASC,GACzBV,gBAxBc,SAAAsB,GACD,IAAbA,GACFJ,GAAQ,SAAAK,GAAS,OAAIA,EAAY,KAElB,IAAbD,GACFH,GAAW,SAAAI,GAAS,OAAIA,EAAY,KAErB,IAAbD,GACFF,GAAO,SAAAG,GAAS,OAAIA,EAAY,QAkBhC,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,oBAdKJ,EAAOa,IAAwB,KAAKG,QAAQ,QCtBzDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,W","file":"static/js/main.1875e7bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3bnPb\",\"stats\":\"Statistics_stats__1fizc\",\"total\":\"Statistics_total__3_WS4\",\"positive\":\"Statistics_positive__3MneU Statistics_total__3_WS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3n82L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__mx1Fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2UHzw\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ children, title }) {\n  return (\n    <div className={s.section}>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.options}>\n      {options.map((option, index) => {\n        return (\n          <button key={index} onClick={() => onLeaveFeedback(index)}>\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from './Notification';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div className={s.statistics}>\n      <h2>Statistics</h2>\n      {total > 0 ? (\n        <div>\n          <ul className={s.stats}>\n            <li>Good: {good}</li>\n            <li>Neutral: {neutral}</li>\n            <li>Bad: {bad}</li>\n          </ul>\n          <p className={s.total}>Total feedbacks: {total}</p>\n          <p className={s.positive}>\n            Positive feedbacks: {positivePercentage}%\n          </p>\n        </div>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import { useState } from 'react';\nimport Section from './components/feedback-widget/Section ';\nimport FeedbackOptions from './components/feedback-widget/FeedbackOptions';\nimport Statistics from './components/feedback-widget/Statistics ';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = feedback => {\n    if (feedback === 0) {\n      setGood(prevState => prevState + 1);\n    }\n    if (feedback === 1) {\n      setNeutral(prevState => prevState + 1);\n    }\n    if (feedback === 2) {\n      setBad(prevState => prevState + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return ((good / countTotalFeedback()) * 100).toFixed(2);\n  };\n\n  return (\n    <Section title=\"Please leave a feedback\">\n      <FeedbackOptions\n        options={[good, neutral, bad]}\n        onLeaveFeedback={addFeedback}\n      />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback()}\n        positivePercentage={countPositiveFeedbackPercentage()}\n      />\n    </Section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}